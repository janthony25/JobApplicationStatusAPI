// <auto-generated />
using System;
using ApplicationStatusAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApplicationStatusAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250215200842_add dbsets")]
    partial class adddbsets
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ApplicationStatusAPI.Models.ApplicationStatus", b =>
                {
                    b.Property<int>("ApplicationStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApplicationStatusId"));

                    b.Property<string>("ApplicationStatusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ApplicationStatusId");

                    b.ToTable("ApplicationStatuses");

                    b.HasData(
                        new
                        {
                            ApplicationStatusId = 1,
                            ApplicationStatusName = "Waiting for reply"
                        },
                        new
                        {
                            ApplicationStatusId = 2,
                            ApplicationStatusName = "Being considered"
                        },
                        new
                        {
                            ApplicationStatusId = 3,
                            ApplicationStatusName = "Closed"
                        });
                });

            modelBuilder.Entity("ApplicationStatusAPI.Models.JobApplication", b =>
                {
                    b.Property<int>("JobApplicationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JobApplicationId"));

                    b.Property<int>("ApplicationStatusId")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DateEdited")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSubmitted")
                        .HasColumnType("datetime2");

                    b.Property<string>("JobLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<int>("SourceId")
                        .HasColumnType("int");

                    b.Property<int>("SubmissionStatusId")
                        .HasColumnType("int");

                    b.HasKey("JobApplicationId");

                    b.HasIndex("ApplicationStatusId");

                    b.HasIndex("LocationId");

                    b.HasIndex("SourceId");

                    b.HasIndex("SubmissionStatusId");

                    b.ToTable("JobApplications");

                    b.HasData(
                        new
                        {
                            JobApplicationId = 1,
                            ApplicationStatusId = 3,
                            CompanyName = "BidFood Limited",
                            DateSubmitted = new DateTime(2024, 12, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            JobLink = "https://www.seek.co.nz/junior-.net-developer-jobs/in-All-Auckland?jobId=80539744&type=promoted",
                            JobTitle = "Software Developer",
                            LocationId = 1,
                            SourceId = 1,
                            SubmissionStatusId = 2
                        });
                });

            modelBuilder.Entity("ApplicationStatusAPI.Models.Location", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LocationId"));

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LocationId");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            LocationId = 1,
                            LocationName = "Auckland"
                        },
                        new
                        {
                            LocationId = 2,
                            LocationName = "Wellington"
                        },
                        new
                        {
                            LocationId = 3,
                            LocationName = "Christchurch"
                        },
                        new
                        {
                            LocationId = 4,
                            LocationName = "Hamilton"
                        },
                        new
                        {
                            LocationId = 5,
                            LocationName = "Tauranga"
                        },
                        new
                        {
                            LocationId = 6,
                            LocationName = "Dunedin"
                        });
                });

            modelBuilder.Entity("ApplicationStatusAPI.Models.Source", b =>
                {
                    b.Property<int>("SourceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SourceId"));

                    b.Property<string>("SourceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SourceId");

                    b.ToTable("Sources");

                    b.HasData(
                        new
                        {
                            SourceId = 1,
                            SourceName = "Seek"
                        });
                });

            modelBuilder.Entity("ApplicationStatusAPI.Models.SubmissionStatus", b =>
                {
                    b.Property<int>("SubmissionStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubmissionStatusId"));

                    b.Property<string>("SubmissionStatusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SubmissionStatusId");

                    b.ToTable("SubmissionStatuses");

                    b.HasData(
                        new
                        {
                            SubmissionStatusId = 1,
                            SubmissionStatusName = "Pending"
                        },
                        new
                        {
                            SubmissionStatusId = 2,
                            SubmissionStatusName = "Sent"
                        });
                });

            modelBuilder.Entity("ApplicationStatusAPI.Models.JobApplication", b =>
                {
                    b.HasOne("ApplicationStatusAPI.Models.ApplicationStatus", "applicationStatus")
                        .WithMany()
                        .HasForeignKey("ApplicationStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApplicationStatusAPI.Models.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApplicationStatusAPI.Models.Source", "Source")
                        .WithMany()
                        .HasForeignKey("SourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApplicationStatusAPI.Models.SubmissionStatus", "SubmissionStatus")
                        .WithMany()
                        .HasForeignKey("SubmissionStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");

                    b.Navigation("Source");

                    b.Navigation("SubmissionStatus");

                    b.Navigation("applicationStatus");
                });
#pragma warning restore 612, 618
        }
    }
}
